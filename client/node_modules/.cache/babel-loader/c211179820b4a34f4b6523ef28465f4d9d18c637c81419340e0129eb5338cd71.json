{"ast":null,"code":"var _jsxFileName = \"F:\\\\CN LAB project\\\\client\\\\src\\\\components\\\\SpectateGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Form, Button, Badge, Alert } from 'react-bootstrap';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport ChatWindow from './ChatWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpectateGame({\n  gameData,\n  onSendChat,\n  onBack,\n  socket\n}) {\n  _s();\n  const [chess, setChess] = useState(new Chess());\n  const [fen, setFen] = useState('start');\n  const [gameStatus, setGameStatus] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [moveHistory, setMoveHistory] = useState([]);\n\n  // Timers\n  const [whiteTime, setWhiteTime] = useState(600);\n  const [blackTime, setBlackTime] = useState(600);\n\n  // Load the game state when it changes\n  useEffect(() => {\n    if (gameData && gameData.state) {\n      // Update chess board\n      const newChess = new Chess(gameData.state.board);\n      setChess(newChess);\n      setFen(gameData.state.board);\n\n      // Update timers\n      setWhiteTime(gameData.state.white_time);\n      setBlackTime(gameData.state.black_time);\n\n      // Update move history\n      setMoveHistory(gameData.state.move_history || []);\n\n      // Initialize chat messages if available\n      if (gameData.chatHistory && chatMessages.length === 0) {\n        setChatMessages(gameData.chatHistory);\n      }\n\n      // Check game status\n      if (gameData.state.status !== \"ongoing\") {\n        if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\n          setGameStatus(`Game over - ${gameData.state.white_player} wins!`);\n        } else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\n          setGameStatus(`Game over - ${gameData.state.black_player} wins!`);\n        } else if (gameData.state.status === \"draw\") {\n          setGameStatus(\"Game over - Draw!\");\n        }\n      } else if (gameData.state.is_check) {\n        setGameStatus(\"Check!\");\n      } else if (gameData.state.is_checkmate) {\n        setGameStatus(\"Checkmate!\");\n      } else if (gameData.state.is_stalemate) {\n        setGameStatus(\"Stalemate!\");\n      } else {\n        setGameStatus(\"\");\n      }\n    }\n  }, [gameData, chatMessages.length]);\n\n  // Handle chat message updates\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"chat\") {\n        setChatMessages(prev => [...prev, data.message]);\n      }\n    };\n    socket.addEventListener('message', handleMessage);\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n\n  // Convert seconds to minutes:seconds format\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\n  const uciToSan = uciMove => {\n    try {\n      const tempChess = new Chess(chess.fen());\n      const move = tempChess.move({\n        from: uciMove.substring(0, 2),\n        to: uciMove.substring(2, 4),\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\n      });\n      return move.san;\n    } catch (e) {\n      return uciMove; // Fallback to UCI notation if conversion fails\n    }\n  };\n\n  // Handle chat submission\n  const [chatInput, setChatInput] = useState('');\n  const handleSendChat = e => {\n    e.preventDefault();\n    if (chatInput.trim()) {\n      onSendChat(chatInput);\n      setChatInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        onClick: onBack,\n        children: \"\\u2190 Back to Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"info\",\n        className: \"ms-3\",\n        children: \"Spectator Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              className: \"align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: [gameData.state.black_player, \" (Black)\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `timer ${gameData.state.turn === 'black' ? 'active' : ''}`,\n                  children: formatTime(blackTime)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: \"auto\",\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: gameData.state.turn === 'white' ? 'primary' : 'secondary',\n                  children: gameData.state.turn === 'white' ? 'White to move' : 'Black to move'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"text-end\",\n                children: [gameData.state.white_player, \" (White)\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `timer ${gameData.state.turn === 'white' ? 'active' : ''}`,\n                  children: formatTime(whiteTime)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"board-container\",\n              children: /*#__PURE__*/_jsxDEV(Chessboard, {\n                position: fen,\n                boardOrientation: \"white\",\n                arePiecesDraggable: false,\n                animationDuration: 200\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), gameStatus && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"info\",\n              className: \"status-message mt-3\",\n              children: gameStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Game Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"White:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 18\n              }, this), \" \", gameData.state.white_player]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Black:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 18\n              }, this), \" \", gameData.state.black_player]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Game Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 18\n              }, this), \" \", gameData.state.status === 'ongoing' ? 'In Progress' : 'Game Over']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Move History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"move-history\",\n              children: [moveHistory.map((move, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"move-history-item\",\n                children: [Math.floor(idx / 2) + 1, \". \", idx % 2 === 0 ? '' : '... ', uciToSan(move)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this)), moveHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center text-muted\",\n                children: \"No moves yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: \"Spectator Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n              messages: chatMessages,\n              currentUser: \"Spectator\",\n              isSpectator: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSendChat,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"d-flex\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  placeholder: \"Type a message...\",\n                  value: chatInput,\n                  onChange: e => setChatInput(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"primary\",\n                  className: \"ms-2\",\n                  disabled: !chatInput.trim(),\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(SpectateGame, \"LY2egoMelegHP0AdomwDVj4UVps=\");\n_c = SpectateGame;\nexport default SpectateGame;\nvar _c;\n$RefreshReg$(_c, \"SpectateGame\");","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Card","Form","Button","Badge","Alert","Chessboard","Chess","ChatWindow","jsxDEV","_jsxDEV","SpectateGame","gameData","onSendChat","onBack","socket","_s","chess","setChess","fen","setFen","gameStatus","setGameStatus","chatMessages","setChatMessages","moveHistory","setMoveHistory","whiteTime","setWhiteTime","blackTime","setBlackTime","state","newChess","board","white_time","black_time","move_history","chatHistory","length","status","white_player","black_player","is_check","is_checkmate","is_stalemate","handleMessage","event","data","JSON","parse","type","prev","message","addEventListener","removeEventListener","formatTime","seconds","mins","Math","floor","secs","uciToSan","uciMove","tempChess","move","from","substring","to","promotion","undefined","san","e","chatInput","setChatInput","handleSendChat","preventDefault","trim","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bg","md","Header","turn","xs","Body","position","boardOrientation","arePiecesDraggable","animationDuration","map","idx","messages","currentUser","isSpectator","onSubmit","Group","Control","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["F:/CN LAB project/client/src/components/SpectateGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Card, Form, Button, Badge, Alert } from 'react-bootstrap';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport ChatWindow from './ChatWindow';\r\n\r\nfunction SpectateGame({ gameData, onSendChat, onBack, socket }) {\r\n  const [chess, setChess] = useState(new Chess());\r\n  const [fen, setFen] = useState('start');\r\n  const [gameStatus, setGameStatus] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [moveHistory, setMoveHistory] = useState([]);\r\n  \r\n  // Timers\r\n  const [whiteTime, setWhiteTime] = useState(600);\r\n  const [blackTime, setBlackTime] = useState(600);\r\n  \r\n  // Load the game state when it changes\r\n  useEffect(() => {\r\n    if (gameData && gameData.state) {\r\n      // Update chess board\r\n      const newChess = new Chess(gameData.state.board);\r\n      setChess(newChess);\r\n      setFen(gameData.state.board);\r\n      \r\n      // Update timers\r\n      setWhiteTime(gameData.state.white_time);\r\n      setBlackTime(gameData.state.black_time);\r\n      \r\n      // Update move history\r\n      setMoveHistory(gameData.state.move_history || []);\r\n      \r\n      // Initialize chat messages if available\r\n      if (gameData.chatHistory && chatMessages.length === 0) {\r\n        setChatMessages(gameData.chatHistory);\r\n      }\r\n      \r\n      // Check game status\r\n      if (gameData.state.status !== \"ongoing\") {\r\n        if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\r\n          setGameStatus(`Game over - ${gameData.state.white_player} wins!`);\r\n        }\r\n        else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\r\n          setGameStatus(`Game over - ${gameData.state.black_player} wins!`);\r\n        }\r\n        else if (gameData.state.status === \"draw\") {\r\n          setGameStatus(\"Game over - Draw!\");\r\n        }\r\n      }\r\n      else if (gameData.state.is_check) {\r\n        setGameStatus(\"Check!\");\r\n      }\r\n      else if (gameData.state.is_checkmate) {\r\n        setGameStatus(\"Checkmate!\");\r\n      }\r\n      else if (gameData.state.is_stalemate) {\r\n        setGameStatus(\"Stalemate!\");\r\n      }\r\n      else {\r\n        setGameStatus(\"\");\r\n      }\r\n    }\r\n  }, [gameData, chatMessages.length]);\r\n  \r\n  // Handle chat message updates\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    \r\n    const handleMessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === \"chat\") {\r\n        setChatMessages(prev => [...prev, data.message]);\r\n      }\r\n    };\r\n    \r\n    socket.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      socket.removeEventListener('message', handleMessage);\r\n    };\r\n  }, [socket]);\r\n  \r\n  // Convert seconds to minutes:seconds format\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n  \r\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\r\n  const uciToSan = (uciMove) => {\r\n    try {\r\n      const tempChess = new Chess(chess.fen());\r\n      const move = tempChess.move({\r\n        from: uciMove.substring(0, 2),\r\n        to: uciMove.substring(2, 4),\r\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\r\n      });\r\n      return move.san;\r\n    } catch (e) {\r\n      return uciMove; // Fallback to UCI notation if conversion fails\r\n    }\r\n  };\r\n  \r\n  // Handle chat submission\r\n  const [chatInput, setChatInput] = useState('');\r\n  \r\n  const handleSendChat = (e) => {\r\n    e.preventDefault();\r\n    if (chatInput.trim()) {\r\n      onSendChat(chatInput);\r\n      setChatInput('');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        <Button variant=\"outline-secondary\" onClick={onBack}>\r\n          &larr; Back to Lobby\r\n        </Button>\r\n        <Badge bg=\"info\" className=\"ms-3\">\r\n          Spectator Mode\r\n        </Badge>\r\n      </div>\r\n      \r\n      <Row>\r\n        <Col md={8}>\r\n          <Card className=\"mb-4\">\r\n            <Card.Header>\r\n              <Row className=\"align-items-center\">\r\n                <Col>\r\n                  {gameData.state.black_player} (Black)\r\n                  <div className={`timer ${gameData.state.turn === 'black' ? 'active' : ''}`}>\r\n                    {formatTime(blackTime)}\r\n                  </div>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                  <Badge bg={gameData.state.turn === 'white' ? 'primary' : 'secondary'}>\r\n                    {gameData.state.turn === 'white' ? 'White to move' : 'Black to move'}\r\n                  </Badge>\r\n                </Col>\r\n                <Col className=\"text-end\">\r\n                  {gameData.state.white_player} (White)\r\n                  <div className={`timer ${gameData.state.turn === 'white' ? 'active' : ''}`}>\r\n                    {formatTime(whiteTime)}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <div className=\"board-container\">\r\n                <Chessboard \r\n                  position={fen}\r\n                  boardOrientation='white'\r\n                  arePiecesDraggable={false}\r\n                  animationDuration={200}\r\n                />\r\n              </div>\r\n              \r\n              {gameStatus && (\r\n                <Alert variant=\"info\" className=\"status-message mt-3\">\r\n                  {gameStatus}\r\n                </Alert>\r\n              )}\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n        \r\n        <Col md={4}>\r\n          <Card className=\"mb-4\">\r\n            <Card.Header>Game Info</Card.Header>\r\n            <Card.Body>\r\n              <p><strong>White:</strong> {gameData.state.white_player}</p>\r\n              <p><strong>Black:</strong> {gameData.state.black_player}</p>\r\n              <p><strong>Game Status:</strong> {gameData.state.status === 'ongoing' ? 'In Progress' : 'Game Over'}</p>\r\n            </Card.Body>\r\n          </Card>\r\n          \r\n          <Card className=\"mb-4\">\r\n            <Card.Header>Move History</Card.Header>\r\n            <Card.Body>\r\n              <div className=\"move-history\">\r\n                {moveHistory.map((move, idx) => (\r\n                  <div key={idx} className=\"move-history-item\">\r\n                    {Math.floor(idx/2) + 1}. {idx % 2 === 0 ? '' : '... '}\r\n                    {uciToSan(move)}\r\n                  </div>\r\n                ))}\r\n                {moveHistory.length === 0 && (\r\n                  <p className=\"text-center text-muted\">No moves yet</p>\r\n                )}\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          \r\n          <Card>\r\n            <Card.Header>Spectator Chat</Card.Header>\r\n            <Card.Body>\r\n              <ChatWindow \r\n                messages={chatMessages} \r\n                currentUser=\"Spectator\"\r\n                isSpectator={true}\r\n              />\r\n              <Form onSubmit={handleSendChat}>\r\n                <Form.Group className=\"d-flex\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={chatInput}\r\n                    onChange={(e) => setChatInput(e.target.value)}\r\n                  />\r\n                  <Button type=\"submit\" variant=\"primary\" className=\"ms-2\" disabled={!chatInput.trim()}>\r\n                    Send\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpectateGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}