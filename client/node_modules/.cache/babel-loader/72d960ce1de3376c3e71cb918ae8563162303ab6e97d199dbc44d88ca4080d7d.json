{"ast":null,"code":"var _jsxFileName = \"F:\\\\CN LAB project\\\\client\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Row, Col, Card, Form, Button, Badge, Alert } from 'react-bootstrap';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport ChatWindow from './ChatWindow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameData,\n  onMove,\n  onSendChat,\n  socket\n}) {\n  _s();\n  const [chess, setChess] = useState(new Chess());\n  const [fen, setFen] = useState('start');\n  const [isMyTurn, setIsMyTurn] = useState(false);\n  const [gameStatus, setGameStatus] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [moveHistory, setMoveHistory] = useState([]);\n\n  // Timers\n  const [whiteTime, setWhiteTime] = useState(600);\n  const [blackTime, setBlackTime] = useState(600);\n  const timerRef = useRef(null);\n\n  // Load the game state when it changes\n  useEffect(() => {\n    if (gameData && gameData.state) {\n      // Update chess board\n      const newChess = new Chess(gameData.state.board);\n      setChess(newChess);\n      setFen(gameData.state.board);\n\n      // Update turn information\n      setIsMyTurn(gameData.state.turn === gameData.color);\n\n      // Update timers\n      setWhiteTime(gameData.state.white_time);\n      setBlackTime(gameData.state.black_time);\n\n      // Update move history\n      setMoveHistory(gameData.state.move_history || []);\n\n      // Check game status\n      if (gameData.state.status !== \"ongoing\") {\n        if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\n          setGameStatus(`Game over - ${gameData.state.white_player} wins!`);\n        } else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\n          setGameStatus(`Game over - ${gameData.state.black_player} wins!`);\n        } else if (gameData.state.status === \"draw\") {\n          setGameStatus(\"Game over - Draw!\");\n        }\n      } else if (gameData.state.is_check) {\n        setGameStatus(\"Check!\");\n      } else if (gameData.state.is_checkmate) {\n        setGameStatus(\"Checkmate!\");\n      } else if (gameData.state.is_stalemate) {\n        setGameStatus(\"Stalemate!\");\n      } else {\n        setGameStatus(\"\");\n      }\n    }\n  }, [gameData]);\n\n  // Handle chat message updates\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"chat\") {\n        setChatMessages(prev => [...prev, data.message]);\n      }\n    };\n    socket.addEventListener('message', handleMessage);\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n\n  // Timer effect\n  useEffect(() => {\n    if (gameData && gameData.state && gameData.state.status === 'ongoing') {\n      // Clear any existing timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n\n      // Start a new timer that decrements the current player's time\n      timerRef.current = setInterval(() => {\n        if (gameData.state.turn === 'white') {\n          setWhiteTime(prev => Math.max(0, prev - 1));\n        } else {\n          setBlackTime(prev => Math.max(0, prev - 1));\n        }\n      }, 1000);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [gameData]);\n\n  // Convert seconds to minutes:seconds format\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Handle piece movement\n  const onDrop = (sourceSquare, targetSquare) => {\n    if (!isMyTurn) return false;\n    try {\n      // Try to make the move in our local chess instance\n      const move = chess.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q' // Always promote to queen for simplicity\n      });\n\n      // If the move is legal, send it to the server\n      if (move) {\n        const moveString = `${sourceSquare}${targetSquare}`;\n        onMove(moveString);\n        return true;\n      }\n    } catch (error) {\n      console.error(\"Invalid move:\", error);\n    }\n    return false;\n  };\n\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\n  const uciToSan = uciMove => {\n    try {\n      const tempChess = new Chess(chess.fen());\n      const move = tempChess.move({\n        from: uciMove.substring(0, 2),\n        to: uciMove.substring(2, 4),\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\n      });\n      return move.san;\n    } catch (e) {\n      return uciMove; // Fallback to UCI notation if conversion fails\n    }\n  };\n\n  // Handle chat submission\n  const [chatInput, setChatInput] = useState('');\n  const handleSendChat = e => {\n    e.preventDefault();\n    if (chatInput.trim()) {\n      onSendChat(chatInput);\n      setChatInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [gameData.color === 'white' ? 'You' : gameData.state.black_player, \" (Black)\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `timer ${gameData.state.turn === 'black' ? 'active' : ''}`,\n                children: formatTime(blackTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                bg: gameData.state.turn === 'white' ? 'primary' : 'secondary',\n                children: gameData.state.turn === 'white' ? 'White to move' : 'Black to move'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"text-end\",\n              children: [gameData.color === 'white' ? gameData.state.white_player : 'You', \" (White)\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `timer ${gameData.state.turn === 'white' ? 'active' : ''}`,\n                children: formatTime(whiteTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"board-container\",\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              position: fen,\n              onPieceDrop: onDrop,\n              boardOrientation: gameData.color === 'white' ? 'white' : 'black',\n              arePremovesAllowed: true,\n              animationDuration: 200\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), gameStatus && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            className: \"status-message mt-3\",\n            children: gameStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Game Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"You:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 16\n            }, this), \" \", gameData.color === 'white' ? 'White' : 'Black']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Opponent:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 16\n            }, this), \" \", gameData.opponent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Game Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 16\n            }, this), \" \", gameData.state.status === 'ongoing' ? 'In Progress' : 'Game Over']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Move History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-history\",\n            children: [moveHistory.map((move, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"move-history-item\",\n              children: [Math.floor(idx / 2) + 1, \". \", idx % 2 === 0 ? '' : '... ', uciToSan(move)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)), moveHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-muted\",\n              children: \"No moves yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(ChatWindow, {\n            messages: chatMessages,\n            currentUser: gameData.color === 'white' ? gameData.state.white_player : gameData.state.black_player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSendChat,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: chatInput,\n                onChange: e => setChatInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"primary\",\n                className: \"ms-2\",\n                disabled: !chatInput.trim(),\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"r4luW00aHWN5cU9w6oIMKU1/64E=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Row","Col","Card","Form","Button","Badge","Alert","Chessboard","Chess","ChatWindow","jsxDEV","_jsxDEV","Game","gameData","onMove","onSendChat","socket","_s","chess","setChess","fen","setFen","isMyTurn","setIsMyTurn","gameStatus","setGameStatus","chatMessages","setChatMessages","moveHistory","setMoveHistory","whiteTime","setWhiteTime","blackTime","setBlackTime","timerRef","state","newChess","board","turn","color","white_time","black_time","move_history","status","white_player","black_player","is_check","is_checkmate","is_stalemate","handleMessage","event","data","JSON","parse","type","prev","message","addEventListener","removeEventListener","current","clearInterval","setInterval","Math","max","formatTime","seconds","mins","floor","secs","onDrop","sourceSquare","targetSquare","move","from","to","promotion","moveString","error","console","uciToSan","uciMove","tempChess","substring","length","undefined","san","e","chatInput","setChatInput","handleSendChat","preventDefault","trim","children","md","className","Header","fileName","_jsxFileName","lineNumber","columnNumber","xs","bg","Body","position","onPieceDrop","boardOrientation","arePremovesAllowed","animationDuration","variant","opponent","map","idx","messages","currentUser","onSubmit","Group","Control","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["F:/CN LAB project/client/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col, Card, Form, Button, Badge, Alert } from 'react-bootstrap';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport ChatWindow from './ChatWindow';\r\n\r\nfunction Game({ gameData, onMove, onSendChat, socket }) {\r\n  const [chess, setChess] = useState(new Chess());\r\n  const [fen, setFen] = useState('start');\r\n  const [isMyTurn, setIsMyTurn] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [moveHistory, setMoveHistory] = useState([]);\r\n  \r\n  // Timers\r\n  const [whiteTime, setWhiteTime] = useState(600);\r\n  const [blackTime, setBlackTime] = useState(600);\r\n  const timerRef = useRef(null);\r\n  \r\n  // Load the game state when it changes\r\n  useEffect(() => {\r\n    if (gameData && gameData.state) {\r\n      // Update chess board\r\n      const newChess = new Chess(gameData.state.board);\r\n      setChess(newChess);\r\n      setFen(gameData.state.board);\r\n      \r\n      // Update turn information\r\n      setIsMyTurn(gameData.state.turn === gameData.color);\r\n      \r\n      // Update timers\r\n      setWhiteTime(gameData.state.white_time);\r\n      setBlackTime(gameData.state.black_time);\r\n      \r\n      // Update move history\r\n      setMoveHistory(gameData.state.move_history || []);\r\n      \r\n      // Check game status\r\n      if (gameData.state.status !== \"ongoing\") {\r\n        if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\r\n          setGameStatus(`Game over - ${gameData.state.white_player} wins!`);\r\n        }\r\n        else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\r\n          setGameStatus(`Game over - ${gameData.state.black_player} wins!`);\r\n        }\r\n        else if (gameData.state.status === \"draw\") {\r\n          setGameStatus(\"Game over - Draw!\");\r\n        }\r\n      }\r\n      else if (gameData.state.is_check) {\r\n        setGameStatus(\"Check!\");\r\n      }\r\n      else if (gameData.state.is_checkmate) {\r\n        setGameStatus(\"Checkmate!\");\r\n      }\r\n      else if (gameData.state.is_stalemate) {\r\n        setGameStatus(\"Stalemate!\");\r\n      }\r\n      else {\r\n        setGameStatus(\"\");\r\n      }\r\n    }\r\n  }, [gameData]);\r\n  \r\n  // Handle chat message updates\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    \r\n    const handleMessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === \"chat\") {\r\n        setChatMessages(prev => [...prev, data.message]);\r\n      }\r\n    };\r\n    \r\n    socket.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      socket.removeEventListener('message', handleMessage);\r\n    };\r\n  }, [socket]);\r\n  \r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameData && gameData.state && gameData.state.status === 'ongoing') {\r\n      // Clear any existing timer\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n      \r\n      // Start a new timer that decrements the current player's time\r\n      timerRef.current = setInterval(() => {\r\n        if (gameData.state.turn === 'white') {\r\n          setWhiteTime(prev => Math.max(0, prev - 1));\r\n        } else {\r\n          setBlackTime(prev => Math.max(0, prev - 1));\r\n        }\r\n      }, 1000);\r\n    }\r\n    \r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [gameData]);\r\n  \r\n  // Convert seconds to minutes:seconds format\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n  \r\n  // Handle piece movement\r\n  const onDrop = (sourceSquare, targetSquare) => {\r\n    if (!isMyTurn) return false;\r\n    \r\n    try {\r\n      // Try to make the move in our local chess instance\r\n      const move = chess.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q', // Always promote to queen for simplicity\r\n      });\r\n      \r\n      // If the move is legal, send it to the server\r\n      if (move) {\r\n        const moveString = `${sourceSquare}${targetSquare}`;\r\n        onMove(moveString);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid move:\", error);\r\n    }\r\n    \r\n    return false;\r\n  };\r\n  \r\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\r\n  const uciToSan = (uciMove) => {\r\n    try {\r\n      const tempChess = new Chess(chess.fen());\r\n      const move = tempChess.move({\r\n        from: uciMove.substring(0, 2),\r\n        to: uciMove.substring(2, 4),\r\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\r\n      });\r\n      return move.san;\r\n    } catch (e) {\r\n      return uciMove; // Fallback to UCI notation if conversion fails\r\n    }\r\n  };\r\n  \r\n  // Handle chat submission\r\n  const [chatInput, setChatInput] = useState('');\r\n  \r\n  const handleSendChat = (e) => {\r\n    e.preventDefault();\r\n    if (chatInput.trim()) {\r\n      onSendChat(chatInput);\r\n      setChatInput('');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <Card className=\"mb-4\">\r\n          <Card.Header>\r\n            <Row className=\"align-items-center\">\r\n              <Col>\r\n                {gameData.color === 'white' ? 'You' : gameData.state.black_player} (Black)\r\n                <div className={`timer ${gameData.state.turn === 'black' ? 'active' : ''}`}>\r\n                  {formatTime(blackTime)}\r\n                </div>\r\n              </Col>\r\n              <Col xs=\"auto\">\r\n                <Badge bg={gameData.state.turn === 'white' ? 'primary' : 'secondary'}>\r\n                  {gameData.state.turn === 'white' ? 'White to move' : 'Black to move'}\r\n                </Badge>\r\n              </Col>\r\n              <Col className=\"text-end\">\r\n                {gameData.color === 'white' ? gameData.state.white_player : 'You'} (White)\r\n                <div className={`timer ${gameData.state.turn === 'white' ? 'active' : ''}`}>\r\n                  {formatTime(whiteTime)}\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <div className=\"board-container\">\r\n              <Chessboard \r\n                position={fen}\r\n                onPieceDrop={onDrop}\r\n                boardOrientation={gameData.color === 'white' ? 'white' : 'black'}\r\n                arePremovesAllowed={true}\r\n                animationDuration={200}\r\n              />\r\n            </div>\r\n            \r\n            {gameStatus && (\r\n              <Alert variant=\"info\" className=\"status-message mt-3\">\r\n                {gameStatus}\r\n              </Alert>\r\n            )}\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n      \r\n      <Col md={4}>\r\n        <Card className=\"mb-4\">\r\n          <Card.Header>Game Info</Card.Header>\r\n          <Card.Body>\r\n            <p><strong>You:</strong> {gameData.color === 'white' ? 'White' : 'Black'}</p>\r\n            <p><strong>Opponent:</strong> {gameData.opponent}</p>\r\n            <p><strong>Game Status:</strong> {gameData.state.status === 'ongoing' ? 'In Progress' : 'Game Over'}</p>\r\n          </Card.Body>\r\n        </Card>\r\n        \r\n        <Card className=\"mb-4\">\r\n          <Card.Header>Move History</Card.Header>\r\n          <Card.Body>\r\n            <div className=\"move-history\">\r\n              {moveHistory.map((move, idx) => (\r\n                <div key={idx} className=\"move-history-item\">\r\n                  {Math.floor(idx/2) + 1}. {idx % 2 === 0 ? '' : '... '}\r\n                  {uciToSan(move)}\r\n                </div>\r\n              ))}\r\n              {moveHistory.length === 0 && (\r\n                <p className=\"text-center text-muted\">No moves yet</p>\r\n              )}\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n        \r\n        <Card>\r\n          <Card.Header>Chat</Card.Header>\r\n          <Card.Body>\r\n            <ChatWindow \r\n              messages={chatMessages} \r\n              currentUser={gameData.color === 'white' ? gameData.state.white_player : gameData.state.black_player}\r\n            />\r\n            <Form onSubmit={handleSendChat}>\r\n              <Form.Group className=\"d-flex\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Type a message...\"\r\n                  value={chatInput}\r\n                  onChange={(e) => setChatInput(e.target.value)}\r\n                />\r\n                <Button type=\"submit\" variant=\"primary\" className=\"ms-2\" disabled={!chatInput.trim()}>\r\n                  Send\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Game; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}