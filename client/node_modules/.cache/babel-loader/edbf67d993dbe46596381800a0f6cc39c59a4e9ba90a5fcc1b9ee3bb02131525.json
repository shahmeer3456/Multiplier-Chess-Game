{"ast":null,"code":"var _jsxFileName = \"F:\\\\CN LAB project\\\\client\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Row, Col, Form, Button, Badge } from 'react-bootstrap';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js';\nimport { FaChessPawn, FaClock, FaUser, FaTrophy, FaExclamationTriangle } from 'react-icons/fa';\nimport ChatWindow from './ChatWindow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  gameData,\n  onMove,\n  onSendChat,\n  socket\n}) {\n  _s();\n  var _gameData$state, _gameData$state2;\n  const [chess, setChess] = useState(new Chess());\n  const [fen, setFen] = useState('start');\n  const [isMyTurn, setIsMyTurn] = useState(false);\n  const [gameStatus, setGameStatus] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [boardOrientation, setBoardOrientation] = useState('white');\n\n  // Game ID for stable key\n  const gameIdRef = useRef((gameData === null || gameData === void 0 ? void 0 : gameData.gameId) || 'default-game');\n\n  // Timers\n  const [whiteTime, setWhiteTime] = useState(600);\n  const [blackTime, setBlackTime] = useState(600);\n  const timerRef = useRef(null);\n\n  // Set board orientation once based on player color\n  useEffect(() => {\n    if (gameData && gameData.color) {\n      setBoardOrientation(gameData.color);\n      gameIdRef.current = gameData.gameId || 'default-game';\n    }\n  }, [gameData === null || gameData === void 0 ? void 0 : gameData.color, gameData === null || gameData === void 0 ? void 0 : gameData.gameId]);\n\n  // Load the game state when it changes\n  useEffect(() => {\n    if (gameData && gameData.state) {\n      try {\n        // Create a new chess instance only when necessary\n        const newFen = gameData.state.board;\n        setFen(newFen);\n        const newChess = new Chess(newFen);\n        setChess(newChess);\n\n        // Update turn information\n        setIsMyTurn(gameData.state.turn === gameData.color);\n\n        // Update timers\n        setWhiteTime(gameData.state.white_time);\n        setBlackTime(gameData.state.black_time);\n\n        // Update move history\n        setMoveHistory(gameData.state.move_history || []);\n\n        // Check game status\n        if (gameData.state.status !== \"ongoing\") {\n          if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\n            setGameStatus(`${gameData.state.white_player} wins!`);\n          } else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\n            setGameStatus(`${gameData.state.black_player} wins!`);\n          } else if (gameData.state.status === \"draw\") {\n            setGameStatus(\"Draw!\");\n          }\n        } else if (gameData.state.is_check) {\n          setGameStatus(\"Check!\");\n        } else if (gameData.state.is_checkmate) {\n          setGameStatus(\"Checkmate!\");\n        } else if (gameData.state.is_stalemate) {\n          setGameStatus(\"Stalemate!\");\n        } else {\n          setGameStatus(\"\");\n        }\n      } catch (error) {\n        console.error(\"Error updating chess state:\", error);\n      }\n    }\n  }, [gameData === null || gameData === void 0 ? void 0 : gameData.state]);\n\n  // Handle chat message updates\n  useEffect(() => {\n    if (!socket) return;\n    const handleMessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === \"chat\") {\n        setChatMessages(prev => [...prev, data.message]);\n      }\n    };\n    socket.addEventListener('message', handleMessage);\n    return () => {\n      socket.removeEventListener('message', handleMessage);\n    };\n  }, [socket]);\n\n  // Timer effect\n  useEffect(() => {\n    if (gameData && gameData.state && gameData.state.status === 'ongoing') {\n      // Clear any existing timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n\n      // Start a new timer that decrements the current player's time\n      timerRef.current = setInterval(() => {\n        if (gameData.state.turn === 'white') {\n          setWhiteTime(prev => Math.max(0, prev - 1));\n        } else {\n          setBlackTime(prev => Math.max(0, prev - 1));\n        }\n      }, 1000);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [gameData === null || gameData === void 0 ? void 0 : (_gameData$state = gameData.state) === null || _gameData$state === void 0 ? void 0 : _gameData$state.turn, gameData === null || gameData === void 0 ? void 0 : (_gameData$state2 = gameData.state) === null || _gameData$state2 === void 0 ? void 0 : _gameData$state2.status]);\n\n  // Convert seconds to minutes:seconds format\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Handle piece movement - use useCallback to prevent unnecessary rerenders\n  const onDrop = useCallback((sourceSquare, targetSquare) => {\n    if (!isMyTurn) return false;\n    try {\n      // Try to make the move in our local chess instance\n      const move = chess.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q' // Always promote to queen for simplicity\n      });\n\n      // If the move is legal, send it to the server\n      if (move) {\n        const moveString = `${sourceSquare}${targetSquare}`;\n        onMove(moveString);\n        return true;\n      }\n    } catch (error) {\n      console.error(\"Invalid move:\", error);\n    }\n    return false;\n  }, [chess, isMyTurn, onMove]);\n\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\n  const uciToSan = uciMove => {\n    try {\n      const tempChess = new Chess(chess.fen());\n      const move = tempChess.move({\n        from: uciMove.substring(0, 2),\n        to: uciMove.substring(2, 4),\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\n      });\n      return move.san;\n    } catch (e) {\n      return uciMove; // Fallback to UCI notation if conversion fails\n    }\n  };\n\n  // Handle chat submission\n  const [chatInput, setChatInput] = useState('');\n  const handleSendChat = e => {\n    e.preventDefault();\n    if (chatInput.trim()) {\n      onSendChat(chatInput);\n      setChatInput('');\n    }\n  };\n\n  // Determine if time is running low (less than 1 minute)\n  const isTimeLow = seconds => seconds < 60;\n\n  // Custom board configuration to prevent constant remounting\n  const boardConfig = {\n    position: fen,\n    onPieceDrop: onDrop,\n    boardOrientation: boardOrientation,\n    arePremovesAllowed: true,\n    animationDuration: 200,\n    customBoardStyle: {\n      borderRadius: '8px',\n      boxShadow: '0 4px 10px rgba(0, 0, 0, 0.2)'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [gameStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `game-status ${gameData.state.status !== 'ongoing' ? 'ended' : 'active'}`,\n      children: gameData.state.status !== 'ongoing' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaTrophy, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), gameStatus]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(FaExclamationTriangle, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), gameStatus]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `player-name ${gameData.state.turn === 'black' ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), gameData.color === 'black' ? 'You' : gameData.state.black_player, \" (Black)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${gameData.state.turn === 'black' ? 'active' : ''} ${isTimeLow(blackTime) ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(FaClock, {\n                className: \"me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), formatTime(blackTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-board-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              maxWidth: '600px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              id: gameIdRef.current,\n              ...boardConfig\n            }, gameIdRef.current, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-info-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `player-name ${gameData.state.turn === 'white' ? 'active' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(FaUser, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), gameData.color === 'white' ? 'You' : gameData.state.white_player, \" (White)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${gameData.state.turn === 'white' ? 'active' : ''} ${isTimeLow(whiteTime) ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(FaClock, {\n                className: \"me-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this), formatTime(whiteTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(FaChessPawn, {\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 34\n            }, this), \"Move History\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-history\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"move-list\",\n              children: [moveHistory.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"move-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"move-number\",\n                  children: [Math.floor(idx / 2) + 1, \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 21\n                }, this), idx % 2 === 0 ? '' : '... ', /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: uciToSan(move)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 21\n                }, this)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)), moveHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"text-center text-muted py-3\",\n                children: \"No moves yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: \"Game Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: [chatMessages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${msg.sender === (gameData.color === 'white' ? gameData.state.white_player : gameData.state.black_player) ? 'message-self' : 'message-other'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: msg.sender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 24\n                }, this), \": \", msg.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-white-50\",\n                children: new Date(msg.timestamp * 1000).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)), chatMessages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-info\",\n              children: \"Chat is empty. Say hello to your opponent!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-input-container\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSendChat,\n              className: \"d-flex w-100\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"chat-input\",\n                placeholder: \"Type a message...\",\n                value: chatInput,\n                onChange: e => setChatInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"send-button\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"SpEUX53W38hs5FUmRts2fdPL4JU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Row","Col","Form","Button","Badge","Chessboard","Chess","FaChessPawn","FaClock","FaUser","FaTrophy","FaExclamationTriangle","ChatWindow","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","gameData","onMove","onSendChat","socket","_s","_gameData$state","_gameData$state2","chess","setChess","fen","setFen","isMyTurn","setIsMyTurn","gameStatus","setGameStatus","chatMessages","setChatMessages","moveHistory","setMoveHistory","boardOrientation","setBoardOrientation","gameIdRef","gameId","whiteTime","setWhiteTime","blackTime","setBlackTime","timerRef","color","current","state","newFen","board","newChess","turn","white_time","black_time","move_history","status","white_player","black_player","is_check","is_checkmate","is_stalemate","error","console","handleMessage","event","data","JSON","parse","type","prev","message","addEventListener","removeEventListener","clearInterval","setInterval","Math","max","formatTime","seconds","mins","floor","secs","onDrop","sourceSquare","targetSquare","move","from","to","promotion","moveString","uciToSan","uciMove","tempChess","substring","length","undefined","san","e","chatInput","setChatInput","handleSendChat","preventDefault","trim","isTimeLow","boardConfig","position","onPieceDrop","arePremovesAllowed","animationDuration","customBoardStyle","borderRadius","boxShadow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","lg","style","width","maxWidth","id","map","idx","msg","sender","Date","timestamp","toLocaleTimeString","onSubmit","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["F:/CN LAB project/client/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Row, Col, Form, Button, Badge } from 'react-bootstrap';\r\nimport { Chessboard } from 'react-chessboard';\r\nimport { Chess } from 'chess.js';\r\nimport { FaChessPawn, FaClock, FaUser, FaTrophy, FaExclamationTriangle } from 'react-icons/fa';\r\nimport ChatWindow from './ChatWindow';\r\n\r\nfunction Game({ gameData, onMove, onSendChat, socket }) {\r\n  const [chess, setChess] = useState(new Chess());\r\n  const [fen, setFen] = useState('start');\r\n  const [isMyTurn, setIsMyTurn] = useState(false);\r\n  const [gameStatus, setGameStatus] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [moveHistory, setMoveHistory] = useState([]);\r\n  const [boardOrientation, setBoardOrientation] = useState('white');\r\n  \r\n  // Game ID for stable key\r\n  const gameIdRef = useRef(gameData?.gameId || 'default-game');\r\n  \r\n  // Timers\r\n  const [whiteTime, setWhiteTime] = useState(600);\r\n  const [blackTime, setBlackTime] = useState(600);\r\n  const timerRef = useRef(null);\r\n  \r\n  // Set board orientation once based on player color\r\n  useEffect(() => {\r\n    if (gameData && gameData.color) {\r\n      setBoardOrientation(gameData.color);\r\n      gameIdRef.current = gameData.gameId || 'default-game';\r\n    }\r\n  }, [gameData?.color, gameData?.gameId]);\r\n  \r\n  // Load the game state when it changes\r\n  useEffect(() => {\r\n    if (gameData && gameData.state) {\r\n      try {\r\n        // Create a new chess instance only when necessary\r\n        const newFen = gameData.state.board;\r\n        setFen(newFen);\r\n        \r\n        const newChess = new Chess(newFen);\r\n        setChess(newChess);\r\n        \r\n        // Update turn information\r\n        setIsMyTurn(gameData.state.turn === gameData.color);\r\n        \r\n        // Update timers\r\n        setWhiteTime(gameData.state.white_time);\r\n        setBlackTime(gameData.state.black_time);\r\n        \r\n        // Update move history\r\n        setMoveHistory(gameData.state.move_history || []);\r\n        \r\n        // Check game status\r\n        if (gameData.state.status !== \"ongoing\") {\r\n          if (gameData.state.status === \"white_wins\" || gameData.state.status === \"white_wins_time\" || gameData.state.status === \"white_wins_disconnect\") {\r\n            setGameStatus(`${gameData.state.white_player} wins!`);\r\n          }\r\n          else if (gameData.state.status === \"black_wins\" || gameData.state.status === \"black_wins_time\" || gameData.state.status === \"black_wins_disconnect\") {\r\n            setGameStatus(`${gameData.state.black_player} wins!`);\r\n          }\r\n          else if (gameData.state.status === \"draw\") {\r\n            setGameStatus(\"Draw!\");\r\n          }\r\n        }\r\n        else if (gameData.state.is_check) {\r\n          setGameStatus(\"Check!\");\r\n        }\r\n        else if (gameData.state.is_checkmate) {\r\n          setGameStatus(\"Checkmate!\");\r\n        }\r\n        else if (gameData.state.is_stalemate) {\r\n          setGameStatus(\"Stalemate!\");\r\n        }\r\n        else {\r\n          setGameStatus(\"\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating chess state:\", error);\r\n      }\r\n    }\r\n  }, [gameData?.state]);\r\n  \r\n  // Handle chat message updates\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    \r\n    const handleMessage = (event) => {\r\n      const data = JSON.parse(event.data);\r\n      if (data.type === \"chat\") {\r\n        setChatMessages(prev => [...prev, data.message]);\r\n      }\r\n    };\r\n    \r\n    socket.addEventListener('message', handleMessage);\r\n    \r\n    return () => {\r\n      socket.removeEventListener('message', handleMessage);\r\n    };\r\n  }, [socket]);\r\n  \r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameData && gameData.state && gameData.state.status === 'ongoing') {\r\n      // Clear any existing timer\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n      \r\n      // Start a new timer that decrements the current player's time\r\n      timerRef.current = setInterval(() => {\r\n        if (gameData.state.turn === 'white') {\r\n          setWhiteTime(prev => Math.max(0, prev - 1));\r\n        } else {\r\n          setBlackTime(prev => Math.max(0, prev - 1));\r\n        }\r\n      }, 1000);\r\n    }\r\n    \r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [gameData?.state?.turn, gameData?.state?.status]);\r\n  \r\n  // Convert seconds to minutes:seconds format\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs < 10 ? '0' : ''}${secs}`;\r\n  };\r\n  \r\n  // Handle piece movement - use useCallback to prevent unnecessary rerenders\r\n  const onDrop = useCallback((sourceSquare, targetSquare) => {\r\n    if (!isMyTurn) return false;\r\n    \r\n    try {\r\n      // Try to make the move in our local chess instance\r\n      const move = chess.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q', // Always promote to queen for simplicity\r\n      });\r\n      \r\n      // If the move is legal, send it to the server\r\n      if (move) {\r\n        const moveString = `${sourceSquare}${targetSquare}`;\r\n        onMove(moveString);\r\n        return true;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Invalid move:\", error);\r\n    }\r\n    \r\n    return false;\r\n  }, [chess, isMyTurn, onMove]);\r\n  \r\n  // Convert UCI notation (e2e4) to SAN notation (e4) for display\r\n  const uciToSan = (uciMove) => {\r\n    try {\r\n      const tempChess = new Chess(chess.fen());\r\n      const move = tempChess.move({\r\n        from: uciMove.substring(0, 2),\r\n        to: uciMove.substring(2, 4),\r\n        promotion: uciMove.length > 4 ? uciMove.substring(4, 5) : undefined\r\n      });\r\n      return move.san;\r\n    } catch (e) {\r\n      return uciMove; // Fallback to UCI notation if conversion fails\r\n    }\r\n  };\r\n  \r\n  // Handle chat submission\r\n  const [chatInput, setChatInput] = useState('');\r\n  \r\n  const handleSendChat = (e) => {\r\n    e.preventDefault();\r\n    if (chatInput.trim()) {\r\n      onSendChat(chatInput);\r\n      setChatInput('');\r\n    }\r\n  };\r\n  \r\n  // Determine if time is running low (less than 1 minute)\r\n  const isTimeLow = (seconds) => seconds < 60;\r\n  \r\n  // Custom board configuration to prevent constant remounting\r\n  const boardConfig = {\r\n    position: fen,\r\n    onPieceDrop: onDrop,\r\n    boardOrientation: boardOrientation,\r\n    arePremovesAllowed: true,\r\n    animationDuration: 200,\r\n    customBoardStyle: {\r\n      borderRadius: '8px',\r\n      boxShadow: '0 4px 10px rgba(0, 0, 0, 0.2)'\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"game-container\">\r\n      {/* Game Status Banner */}\r\n      {gameStatus && (\r\n        <div className={`game-status ${gameData.state.status !== 'ongoing' ? 'ended' : 'active'}`}>\r\n          {gameData.state.status !== 'ongoing' ? (\r\n            <><FaTrophy className=\"me-2\" />{gameStatus}</>\r\n          ) : (\r\n            <><FaExclamationTriangle className=\"me-2\" />{gameStatus}</>\r\n          )}\r\n        </div>\r\n      )}\r\n      \r\n      <Row>\r\n        <Col lg={8}>\r\n          {/* Player Info - Black */}\r\n          <div className=\"game-info-panel\">\r\n            <div className=\"player-info\">\r\n              <div className={`player-name ${gameData.state.turn === 'black' ? 'active' : ''}`}>\r\n                <FaUser />\r\n                {gameData.color === 'black' ? 'You' : gameData.state.black_player} (Black)\r\n              </div>\r\n              <div className={`timer ${gameData.state.turn === 'black' ? 'active' : ''} ${isTimeLow(blackTime) ? 'warning' : ''}`}>\r\n                <FaClock className=\"me-1\" />\r\n                {formatTime(blackTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chess Board */}\r\n          <div className=\"game-board-container\">\r\n            <div style={{ width: '100%', maxWidth: '600px' }}>\r\n              <Chessboard \r\n                key={gameIdRef.current}\r\n                id={gameIdRef.current}\r\n                {...boardConfig}\r\n              />\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Player Info - White */}\r\n          <div className=\"game-info-panel\">\r\n            <div className=\"player-info\">\r\n              <div className={`player-name ${gameData.state.turn === 'white' ? 'active' : ''}`}>\r\n                <FaUser />\r\n                {gameData.color === 'white' ? 'You' : gameData.state.white_player} (White)\r\n              </div>\r\n              <div className={`timer ${gameData.state.turn === 'white' ? 'active' : ''} ${isTimeLow(whiteTime) ? 'warning' : ''}`}>\r\n                <FaClock className=\"me-1\" />\r\n                {formatTime(whiteTime)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        \r\n        <Col lg={4}>\r\n          {/* Move History */}\r\n          <div className=\"mb-4\">\r\n            <h5 className=\"mb-3\"><FaChessPawn className=\"me-2\" />Move History</h5>\r\n            <div className=\"move-history\">\r\n              <ul className=\"move-list\">\r\n                {moveHistory.map((move, idx) => (\r\n                  <li key={idx} className=\"move-item\">\r\n                    <span className=\"move-number\">{Math.floor(idx/2) + 1}.</span>\r\n                    {idx % 2 === 0 ? '' : '... '}\r\n                    <strong>{uciToSan(move)}</strong>\r\n                  </li>\r\n                ))}\r\n                {moveHistory.length === 0 && (\r\n                  <li className=\"text-center text-muted py-3\">No moves yet</li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chat Section */}\r\n          <div className=\"chat-container\">\r\n            <div className=\"chat-header\">Game Chat</div>\r\n            <div className=\"messages-container\">\r\n              {chatMessages.map((msg, idx) => (\r\n                <div \r\n                  key={idx} \r\n                  className={`message ${\r\n                    msg.sender === (gameData.color === 'white' ? gameData.state.white_player : gameData.state.black_player) \r\n                      ? 'message-self' \r\n                      : 'message-other'\r\n                  }`}\r\n                >\r\n                  <div><strong>{msg.sender}</strong>: {msg.message}</div>\r\n                  <small className=\"text-white-50\">{new Date(msg.timestamp * 1000).toLocaleTimeString()}</small>\r\n                </div>\r\n              ))}\r\n              {chatMessages.length === 0 && (\r\n                <div className=\"message-info\">\r\n                  Chat is empty. Say hello to your opponent!\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"chat-input-container\">\r\n              <Form onSubmit={handleSendChat} className=\"d-flex w-100\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"chat-input\"\r\n                  placeholder=\"Type a message...\"\r\n                  value={chatInput}\r\n                  onChange={(e) => setChatInput(e.target.value)}\r\n                />\r\n                <button type=\"submit\" className=\"send-button\">\r\n                  Send\r\n                </button>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,iBAAiB;AAC/D,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,UAAU;AAChC,SAASC,WAAW,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,qBAAqB,QAAQ,gBAAgB;AAC9F,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,IAAIA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,UAAU;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,IAAIU,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGhC,QAAQ,CAAC,OAAO,CAAC;EACvC,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,OAAO,CAAC;;EAEjE;EACA,MAAM2C,SAAS,GAAGzC,MAAM,CAAC,CAAAoB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsB,MAAM,KAAI,cAAc,CAAC;;EAE5D;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAAC+C,SAAS,EAAEC,YAAY,CAAC,GAAGhD,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAMiD,QAAQ,GAAG/C,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,IAAIA,QAAQ,CAAC4B,KAAK,EAAE;MAC9BR,mBAAmB,CAACpB,QAAQ,CAAC4B,KAAK,CAAC;MACnCP,SAAS,CAACQ,OAAO,GAAG7B,QAAQ,CAACsB,MAAM,IAAI,cAAc;IACvD;EACF,CAAC,EAAE,CAACtB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4B,KAAK,EAAE5B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEsB,MAAM,CAAC,CAAC;;EAEvC;EACA3C,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,IAAIA,QAAQ,CAAC8B,KAAK,EAAE;MAC9B,IAAI;QACF;QACA,MAAMC,MAAM,GAAG/B,QAAQ,CAAC8B,KAAK,CAACE,KAAK;QACnCtB,MAAM,CAACqB,MAAM,CAAC;QAEd,MAAME,QAAQ,GAAG,IAAI7C,KAAK,CAAC2C,MAAM,CAAC;QAClCvB,QAAQ,CAACyB,QAAQ,CAAC;;QAElB;QACArB,WAAW,CAACZ,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAKlC,QAAQ,CAAC4B,KAAK,CAAC;;QAEnD;QACAJ,YAAY,CAACxB,QAAQ,CAAC8B,KAAK,CAACK,UAAU,CAAC;QACvCT,YAAY,CAAC1B,QAAQ,CAAC8B,KAAK,CAACM,UAAU,CAAC;;QAEvC;QACAlB,cAAc,CAAClB,QAAQ,CAAC8B,KAAK,CAACO,YAAY,IAAI,EAAE,CAAC;;QAEjD;QACA,IAAIrC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,SAAS,EAAE;UACvC,IAAItC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,YAAY,IAAItC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,iBAAiB,IAAItC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,uBAAuB,EAAE;YAC9IxB,aAAa,CAAC,GAAGd,QAAQ,CAAC8B,KAAK,CAACS,YAAY,QAAQ,CAAC;UACvD,CAAC,MACI,IAAIvC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,YAAY,IAAItC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,iBAAiB,IAAItC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,uBAAuB,EAAE;YACnJxB,aAAa,CAAC,GAAGd,QAAQ,CAAC8B,KAAK,CAACU,YAAY,QAAQ,CAAC;UACvD,CAAC,MACI,IAAIxC,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,MAAM,EAAE;YACzCxB,aAAa,CAAC,OAAO,CAAC;UACxB;QACF,CAAC,MACI,IAAId,QAAQ,CAAC8B,KAAK,CAACW,QAAQ,EAAE;UAChC3B,aAAa,CAAC,QAAQ,CAAC;QACzB,CAAC,MACI,IAAId,QAAQ,CAAC8B,KAAK,CAACY,YAAY,EAAE;UACpC5B,aAAa,CAAC,YAAY,CAAC;QAC7B,CAAC,MACI,IAAId,QAAQ,CAAC8B,KAAK,CAACa,YAAY,EAAE;UACpC7B,aAAa,CAAC,YAAY,CAAC;QAC7B,CAAC,MACI;UACHA,aAAa,CAAC,EAAE,CAAC;QACnB;MACF,CAAC,CAAC,OAAO8B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC,EAAE,CAAC5C,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE8B,KAAK,CAAC,CAAC;;EAErB;EACAnD,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,MAAM,EAAE;IAEb,MAAM2C,aAAa,GAAIC,KAAK,IAAK;MAC/B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACG,IAAI,KAAK,MAAM,EAAE;QACxBnC,eAAe,CAACoC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,IAAI,CAACK,OAAO,CAAC,CAAC;MAClD;IACF,CAAC;IAEDlD,MAAM,CAACmD,gBAAgB,CAAC,SAAS,EAAER,aAAa,CAAC;IAEjD,OAAO,MAAM;MACX3C,MAAM,CAACoD,mBAAmB,CAAC,SAAS,EAAET,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAAC3C,MAAM,CAAC,CAAC;;EAEZ;EACAxB,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,IAAIA,QAAQ,CAAC8B,KAAK,IAAI9B,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,SAAS,EAAE;MACrE;MACA,IAAIX,QAAQ,CAACE,OAAO,EAAE;QACpB2B,aAAa,CAAC7B,QAAQ,CAACE,OAAO,CAAC;MACjC;;MAEA;MACAF,QAAQ,CAACE,OAAO,GAAG4B,WAAW,CAAC,MAAM;QACnC,IAAIzD,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAK,OAAO,EAAE;UACnCV,YAAY,CAAC4B,IAAI,IAAIM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,IAAI,GAAG,CAAC,CAAC,CAAC;QAC7C,CAAC,MAAM;UACL1B,YAAY,CAAC0B,IAAI,IAAIM,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,IAAI,GAAG,CAAC,CAAC,CAAC;QAC7C;MACF,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,MAAM;MACX,IAAIzB,QAAQ,CAACE,OAAO,EAAE;QACpB2B,aAAa,CAAC7B,QAAQ,CAACE,OAAO,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAAC7B,QAAQ,aAARA,QAAQ,wBAAAK,eAAA,GAARL,QAAQ,CAAE8B,KAAK,cAAAzB,eAAA,uBAAfA,eAAA,CAAiB6B,IAAI,EAAElC,QAAQ,aAARA,QAAQ,wBAAAM,gBAAA,GAARN,QAAQ,CAAE8B,KAAK,cAAAxB,gBAAA,uBAAfA,gBAAA,CAAiBgC,MAAM,CAAC,CAAC;;EAEpD;EACA,MAAMsB,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMG,IAAI,GAAGH,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,IAAIE,IAAI,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;EACjD,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGpF,WAAW,CAAC,CAACqF,YAAY,EAAEC,YAAY,KAAK;IACzD,IAAI,CAACxD,QAAQ,EAAE,OAAO,KAAK;IAE3B,IAAI;MACF;MACA,MAAMyD,IAAI,GAAG7D,KAAK,CAAC6D,IAAI,CAAC;QACtBC,IAAI,EAAEH,YAAY;QAClBI,EAAE,EAAEH,YAAY;QAChBI,SAAS,EAAE,GAAG,CAAE;MAClB,CAAC,CAAC;;MAEF;MACA,IAAIH,IAAI,EAAE;QACR,MAAMI,UAAU,GAAG,GAAGN,YAAY,GAAGC,YAAY,EAAE;QACnDlE,MAAM,CAACuE,UAAU,CAAC;QAClB,OAAO,IAAI;MACb;IACF,CAAC,CAAC,OAAO5B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;IAEA,OAAO,KAAK;EACd,CAAC,EAAE,CAACrC,KAAK,EAAEI,QAAQ,EAAEV,MAAM,CAAC,CAAC;;EAE7B;EACA,MAAMwE,QAAQ,GAAIC,OAAO,IAAK;IAC5B,IAAI;MACF,MAAMC,SAAS,GAAG,IAAIvF,KAAK,CAACmB,KAAK,CAACE,GAAG,CAAC,CAAC,CAAC;MACxC,MAAM2D,IAAI,GAAGO,SAAS,CAACP,IAAI,CAAC;QAC1BC,IAAI,EAAEK,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7BN,EAAE,EAAEI,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3BL,SAAS,EAAEG,OAAO,CAACG,MAAM,GAAG,CAAC,GAAGH,OAAO,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,GAAGE;MAC5D,CAAC,CAAC;MACF,OAAOV,IAAI,CAACW,GAAG;IACjB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACV,OAAON,OAAO,CAAC,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGxG,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMyG,cAAc,GAAIH,CAAC,IAAK;IAC5BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAIH,SAAS,CAACI,IAAI,CAAC,CAAC,EAAE;MACpBnF,UAAU,CAAC+E,SAAS,CAAC;MACrBC,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMI,SAAS,GAAIzB,OAAO,IAAKA,OAAO,GAAG,EAAE;;EAE3C;EACA,MAAM0B,WAAW,GAAG;IAClBC,QAAQ,EAAE/E,GAAG;IACbgF,WAAW,EAAExB,MAAM;IACnB9C,gBAAgB,EAAEA,gBAAgB;IAClCuE,kBAAkB,EAAE,IAAI;IACxBC,iBAAiB,EAAE,GAAG;IACtBC,gBAAgB,EAAE;MAChBC,YAAY,EAAE,KAAK;MACnBC,SAAS,EAAE;IACb;EACF,CAAC;EAED,oBACElG,OAAA;IAAKmG,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAE5BnF,UAAU,iBACTjB,OAAA;MAAKmG,SAAS,EAAE,eAAe/F,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,SAAS,GAAG,OAAO,GAAG,QAAQ,EAAG;MAAA0D,QAAA,EACvFhG,QAAQ,CAAC8B,KAAK,CAACQ,MAAM,KAAK,SAAS,gBAClC1C,OAAA,CAAAE,SAAA;QAAAkG,QAAA,gBAAEpG,OAAA,CAACJ,QAAQ;UAACuG,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAACvF,UAAU;MAAA,eAAG,CAAC,gBAE9CjB,OAAA,CAAAE,SAAA;QAAAkG,QAAA,gBAAEpG,OAAA,CAACH,qBAAqB;UAACsG,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAACvF,UAAU;MAAA,eAAG;IAC3D;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,eAEDxG,OAAA,CAACd,GAAG;MAAAkH,QAAA,gBACFpG,OAAA,CAACb,GAAG;QAACsH,EAAE,EAAE,CAAE;QAAAL,QAAA,gBAETpG,OAAA;UAAKmG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BpG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpG,OAAA;cAAKmG,SAAS,EAAE,eAAe/F,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;cAAA8D,QAAA,gBAC/EpG,OAAA,CAACL,MAAM;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACTpG,QAAQ,CAAC4B,KAAK,KAAK,OAAO,GAAG,KAAK,GAAG5B,QAAQ,CAAC8B,KAAK,CAACU,YAAY,EAAC,UACpE;YAAA;cAAAyD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNxG,OAAA;cAAKmG,SAAS,EAAE,SAAS/F,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,IAAIoD,SAAS,CAAC7D,SAAS,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAuE,QAAA,gBAClHpG,OAAA,CAACN,OAAO;gBAACyG,SAAS,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAC3BxC,UAAU,CAACnC,SAAS,CAAC;YAAA;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNxG,OAAA;UAAKmG,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnCpG,OAAA;YAAK0G,KAAK,EAAE;cAAEC,KAAK,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAQ,CAAE;YAAAR,QAAA,eAC/CpG,OAAA,CAACT,UAAU;cAETsH,EAAE,EAAEpF,SAAS,CAACQ,OAAQ;cAAA,GAClB0D;YAAW,GAFVlE,SAAS,CAACQ,OAAO;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNxG,OAAA;UAAKmG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BpG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,gBAC1BpG,OAAA;cAAKmG,SAAS,EAAE,eAAe/F,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;cAAA8D,QAAA,gBAC/EpG,OAAA,CAACL,MAAM;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EACTpG,QAAQ,CAAC4B,KAAK,KAAK,OAAO,GAAG,KAAK,GAAG5B,QAAQ,CAAC8B,KAAK,CAACS,YAAY,EAAC,UACpE;YAAA;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACNxG,OAAA;cAAKmG,SAAS,EAAE,SAAS/F,QAAQ,CAAC8B,KAAK,CAACI,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,IAAIoD,SAAS,CAAC/D,SAAS,CAAC,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAyE,QAAA,gBAClHpG,OAAA,CAACN,OAAO;gBAACyG,SAAS,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAC3BxC,UAAU,CAACrC,SAAS,CAAC;YAAA;cAAA0E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENxG,OAAA,CAACb,GAAG;QAACsH,EAAE,EAAE,CAAE;QAAAL,QAAA,gBAETpG,OAAA;UAAKmG,SAAS,EAAC,MAAM;UAAAC,QAAA,gBACnBpG,OAAA;YAAImG,SAAS,EAAC,MAAM;YAAAC,QAAA,gBAACpG,OAAA,CAACP,WAAW;cAAC0G,SAAS,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAY;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtExG,OAAA;YAAKmG,SAAS,EAAC,cAAc;YAAAC,QAAA,eAC3BpG,OAAA;cAAImG,SAAS,EAAC,WAAW;cAAAC,QAAA,GACtB/E,WAAW,CAACyF,GAAG,CAAC,CAACtC,IAAI,EAAEuC,GAAG,kBACzB/G,OAAA;gBAAcmG,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACjCpG,OAAA;kBAAMmG,SAAS,EAAC,aAAa;kBAAAC,QAAA,GAAEtC,IAAI,CAACK,KAAK,CAAC4C,GAAG,GAAC,CAAC,CAAC,GAAG,CAAC,EAAC,GAAC;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EAC5DO,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,eAC5B/G,OAAA;kBAAAoG,QAAA,EAASvB,QAAQ,CAACL,IAAI;gBAAC;kBAAA6B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC;cAAA,GAH1BO,GAAG;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIR,CACL,CAAC,EACDnF,WAAW,CAAC4D,MAAM,KAAK,CAAC,iBACvBjF,OAAA;gBAAImG,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAC7D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNxG,OAAA;UAAKmG,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BpG,OAAA;YAAKmG,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5CxG,OAAA;YAAKmG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAChCjF,YAAY,CAAC2F,GAAG,CAAC,CAACE,GAAG,EAAED,GAAG,kBACzB/G,OAAA;cAEEmG,SAAS,EAAE,WACTa,GAAG,CAACC,MAAM,MAAM7G,QAAQ,CAAC4B,KAAK,KAAK,OAAO,GAAG5B,QAAQ,CAAC8B,KAAK,CAACS,YAAY,GAAGvC,QAAQ,CAAC8B,KAAK,CAACU,YAAY,CAAC,GACnG,cAAc,GACd,eAAe,EAClB;cAAAwD,QAAA,gBAEHpG,OAAA;gBAAAoG,QAAA,gBAAKpG,OAAA;kBAAAoG,QAAA,EAASY,GAAG,CAACC;gBAAM;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAS,CAAC,MAAE,EAACQ,GAAG,CAACvD,OAAO;cAAA;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvDxG,OAAA;gBAAOmG,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAE,IAAIc,IAAI,CAACF,GAAG,CAACG,SAAS,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC;cAAC;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,GARzFO,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASL,CACN,CAAC,EACDrF,YAAY,CAAC8D,MAAM,KAAK,CAAC,iBACxBjF,OAAA;cAAKmG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAE9B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNxG,OAAA;YAAKmG,SAAS,EAAC,sBAAsB;YAAAC,QAAA,eACnCpG,OAAA,CAACZ,IAAI;cAACiI,QAAQ,EAAE9B,cAAe;cAACY,SAAS,EAAC,cAAc;cAAAC,QAAA,gBACtDpG,OAAA;gBACEuD,IAAI,EAAC,MAAM;gBACX4C,SAAS,EAAC,YAAY;gBACtBmB,WAAW,EAAC,mBAAmB;gBAC/BC,KAAK,EAAElC,SAAU;gBACjBmC,QAAQ,EAAGpC,CAAC,IAAKE,YAAY,CAACF,CAAC,CAACqC,MAAM,CAACF,KAAK;cAAE;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,eACFxG,OAAA;gBAAQuD,IAAI,EAAC,QAAQ;gBAAC4C,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAE9C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChG,EAAA,CAtTQL,IAAI;AAAAuH,EAAA,GAAJvH,IAAI;AAwTb,eAAeA,IAAI;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}